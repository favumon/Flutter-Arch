// Mocks generated by Mockito 5.0.7 from annotations
// in domain/test/pin_registration/usecases/register_pin_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:core/error/failures.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:domain/feature/pin_registration/entities/pin_info.dart' as _i6;
import 'package:domain/feature/pin_registration/repositories/pin_register_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [PinRegisterRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPinRegisterRepository extends _i1.Mock
    implements _i3.PinRegisterRepository {
  MockPinRegisterRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> registerPin(_i6.PinInfo? pin) =>
      (super.noSuchMethod(Invocation.method(#registerPin, [pin]),
              returnValue: Future<_i2.Either<_i5.Failure, void>>.value(
                  _FakeEither<_i5.Failure, void>()))
          as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
