// Mocks generated by Mockito 5.0.7 from annotations
// in domain/test/signup/usecases/submit_signup_info_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:core/error/failures.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:domain/feature/signup/entities/signup_info.dart' as _i7;
import 'package:domain/feature/signup/entities/signup_response.dart' as _i6;
import 'package:domain/feature/signup/repositories/user_signup_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [UserSignupRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserSignupRepository extends _i1.Mock
    implements _i3.UserSignupRepository {
  MockUserSignupRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.SignupResponse>> submitSignupInfo(
          {_i7.SignupInfo? signupInfo, String? otp}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #submitSignupInfo, [], {#signupInfo: signupInfo, #otp: otp}),
              returnValue:
                  Future<_i2.Either<_i5.Failure, _i6.SignupResponse>>.value(
                      _FakeEither<_i5.Failure, _i6.SignupResponse>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.SignupResponse>>);
}
